version: "3.4"

networks:
  frontend:
    external: true
  app:
    driver: bridge
    internal: false

services:
  nginx:
    image: nginx:latest
    networks:
      - app
      - frontend
    depends_on:
      - node
    ports:
      - '80'
    volumes:
      - ${PWD}/.docker/vhost.conf:/etc/nginx/conf.d/default.conf:ro
      - ./:/app:delegated
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=frontend"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_DOMAIN}`)"

  node:
    image: node:14
    command: npm start
    networks:
      - app
    working_dir: /app
    environment:
      - NODE_ENV=development
    volumes:
      - .:/app:delegated
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://node:3000/tags" ]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 60s

  mariadb:
    # Database with pre-load fixtures for testing for the API.
    image: itkdev/os2display-api-mariadb:alpha
    networks:
      - app
    environment:
      MYSQL_USER: db
      MYSQL_PASSWORD: db
      MYSQL_DATABASE: db
      MYSQL_ROOT_PASSWORD: password

  api:
    image: itkdev/os2display-api-service:alpha
    networks:
      - app
    depends_on:
      - mariadb
    environment:
      PHP_MAX_EXECUTION_TIME: 30
      PHP_MEMORY_LIMIT: 128M
      PHP_UPLOAD_MAX_FILESIZE: 8M
      APP_ENV: prod
      APP_TRUSTED_PROXIES: 127.0.0.1,REMOTE_ADDR
      APP_SECRET: MySuperSecret
      APP_CORS_ALLOW_ORIGIN: '*'
      APP_DATABASE_URL: mysql://db:db@mariadb:3306/db?serverVersion=mariadb-10.4.21
      APP_DEFAULT_DATE_FORMAT: Y-m-d\TH:i:s.v\Z

  nginx-api:
    image: itkdev/os2display-api-service-nginx:alpha
    networks:
      app:
      frontend:
        aliases:
          - api-display-admin-client.local.itkdev.dk
    depends_on:
      - api
    ports:
      - '80'
    environment:
      PHP_FPM_SERVER: api
      NGINX_FPM_UPLOAD_MAX: 8M
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=frontend"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_api.rule=Host(`${COMPOSE_API_DOMAIN}`)"

  cypress:
    image: cypress/included:9.1.1
    networks:
      - app
      - frontend
    depends_on:
      - nginx
      - nginx-api
    environment:
      - CYPRESS_VIDEO=true
      - CYPRESS_baseUrl=http://nginx
      #- DISPLAY=host.docker.internal:0
    volumes:
      - .:/e2e
      - /tmp/.X11-unix:/tmp/.X11-unix
    working_dir: /e2e
    entrypoint: cypress
